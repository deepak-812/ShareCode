{"ast":null,"code":"var _jsxFileName = \"E:\\\\share-edit\\\\src\\\\pages\\\\EditorPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Client from '../components/Client';\nimport Editor from '../components/Editor'; //   return (\n//     <div className=\"mainWrap\">\n//         <div className='aside'>\n//           <div className=\"asideInner\">\n//             <div className=\"logo\">\n//               <img className=\"logoImage\" src='/app_logo.png' alt=\"app-logo\"/>\n//             </div>\n//             <h3>Connected</h3>\n//             <div className=\"clientsList\">\n//                         {clients.map((client) => (\n//                             <Client\n//                                 key={client.socketId}\n//                                 username={client.username}\n//                             />\n//                         ))}\n//             </div>\n//           </div>\n//           <button className='btn copyBtn'>Copy ROOM ID</button>\n//           <button className='btn leaveBtn'>Leave</button>\n//         </div>\n//         <div className=\"editorWrap\">\n//             <Editor />\n//         </div>\n//     </div>\n//   )\n// }\n// export default EditorPage\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditorPage = () => {\n  _s();\n\n  const [clients, setClients] = useState([{\n    socketId: 1,\n    username: 'Rakesh k'\n  }, {\n    socketId: 2,\n    username: 'John Doe'\n  }, {\n    socketId: 3,\n    username: 'Akash Sharma'\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aside\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"asideInner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"logoImage\",\n            src: \"/app_logo.png\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clientsList\",\n          children: clients.map(client => /*#__PURE__*/_jsxDEV(Client, {\n            username: client.username\n          }, client.socketId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn copyBtn\",\n        onClick: copyRoomId,\n        children: \"Copy ROOM ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn leaveBtn\",\n        onClick: leaveRoom,\n        children: \"Leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editorWrap\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        socketRef: socketRef,\n        roomId: roomId,\n        onCodeChange: code => {\n          codeRef.current = code;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditorPage, \"X/516ijzL2/2VAqxpACJotsNvO0=\");\n\n_c = EditorPage;\nexport default EditorPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useState","Client","Editor","EditorPage","clients","setClients","socketId","username","map","client","copyRoomId","leaveRoom","socketRef","roomId","code","codeRef","current"],"sources":["E:/share-edit/src/pages/EditorPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Client from '../components/Client';\r\nimport Editor from '../components/Editor';\r\n\r\n//   return (\r\n//     <div className=\"mainWrap\">\r\n//         <div className='aside'>\r\n//           <div className=\"asideInner\">\r\n//             <div className=\"logo\">\r\n//               <img className=\"logoImage\" src='/app_logo.png' alt=\"app-logo\"/>\r\n//             </div>\r\n//             <h3>Connected</h3>\r\n//             <div className=\"clientsList\">\r\n//                         {clients.map((client) => (\r\n//                             <Client\r\n//                                 key={client.socketId}\r\n//                                 username={client.username}\r\n//                             />\r\n//                         ))}\r\n//             </div>\r\n//           </div>\r\n//           <button className='btn copyBtn'>Copy ROOM ID</button>\r\n//           <button className='btn leaveBtn'>Leave</button>\r\n//         </div>\r\n//         <div className=\"editorWrap\">\r\n//             <Editor />\r\n//         </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default EditorPage\r\n\r\nconst EditorPage = () => {\r\n    const [clients,setClients] = useState([{socketId: 1, username: 'Rakesh k'},\r\n  {socketId: 2, username: 'John Doe'},\r\n  {socketId: 3, username: 'Akash Sharma'}]);\r\n\r\n    return (\r\n        <div className=\"mainWrap\">\r\n            <div className=\"aside\">\r\n                <div className=\"asideInner\">\r\n                    <div className=\"logo\">\r\n                        <img\r\n                            className=\"logoImage\"\r\n                            src=\"/app_logo.png\"\r\n                            alt=\"logo\"\r\n                        />\r\n                    </div>\r\n                    <h3>Connected</h3>\r\n                    <div className=\"clientsList\">\r\n                        {clients.map((client) => (\r\n                            <Client key={client.socketId}\r\n                            username={client.username}/>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn copyBtn\" onClick={copyRoomId}>\r\n                    Copy ROOM ID\r\n                </button>\r\n                <button className=\"btn leaveBtn\" onClick={leaveRoom}>\r\n                    Leave\r\n                </button>\r\n            </div>\r\n            <div className=\"editorWrap\">\r\n                <Editor\r\n                    socketRef={socketRef}\r\n                    roomId={roomId}\r\n                    onCodeChange={(code) => {\r\n                        codeRef.current = code;\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditorPage;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,OAAD,EAASC,UAAT,IAAuBL,QAAQ,CAAC,CAAC;IAACM,QAAQ,EAAE,CAAX;IAAcC,QAAQ,EAAE;EAAxB,CAAD,EACxC;IAACD,QAAQ,EAAE,CAAX;IAAcC,QAAQ,EAAE;EAAxB,CADwC,EAExC;IAACD,QAAQ,EAAE,CAAX;IAAcC,QAAQ,EAAE;EAAxB,CAFwC,CAAD,CAArC;EAIA,oBACI;IAAK,SAAS,EAAC,UAAf;IAAA,wBACI;MAAK,SAAS,EAAC,OAAf;MAAA,wBACI;QAAK,SAAS,EAAC,YAAf;QAAA,wBACI;UAAK,SAAS,EAAC,MAAf;UAAA,uBACI;YACI,SAAS,EAAC,WADd;YAEI,GAAG,EAAC,eAFR;YAGI,GAAG,EAAC;UAHR;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QADJ,eAQI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARJ,eASI;UAAK,SAAS,EAAC,aAAf;UAAA,UACKH,OAAO,CAACI,GAAR,CAAaC,MAAD,iBACT,QAAC,MAAD;YACA,QAAQ,EAAEA,MAAM,CAACF;UADjB,GAAaE,MAAM,CAACH,QAApB;YAAA;YAAA;YAAA;UAAA,QADH;QADL;UAAA;UAAA;UAAA;QAAA,QATJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAiBI;QAAQ,SAAS,EAAC,aAAlB;QAAgC,OAAO,EAAEI,UAAzC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBJ,eAoBI;QAAQ,SAAS,EAAC,cAAlB;QAAiC,OAAO,EAAEC,SAA1C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QApBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAyBI;MAAK,SAAS,EAAC,YAAf;MAAA,uBACI,QAAC,MAAD;QACI,SAAS,EAAEC,SADf;QAEI,MAAM,EAAEC,MAFZ;QAGI,YAAY,EAAGC,IAAD,IAAU;UACpBC,OAAO,CAACC,OAAR,GAAkBF,IAAlB;QACH;MALL;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAzBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAqCH,CA1CD;;GAAMX,U;;KAAAA,U;AA4CN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}