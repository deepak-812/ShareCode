{"ast":null,"code":"var _jsxFileName = \"E:\\\\share-edit\\\\src\\\\pages\\\\EditorPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport ACTIONS from '../Actions';\nimport Client from '../components/Client';\nimport Editor from '../components/Editor';\nimport { initSocket } from '../socket';\nimport { useLocation, useNavigate, Navigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditorPage = () => {\n  _s();\n\n  const socketRef = useRef(null);\n  const codeRef = useRef(null);\n  const location = useLocation();\n  const {\n    roomId\n  } = useParams();\n  const reactNavigator = useNavigate();\n  const [clients, setClients] = useState([]);\n  useEffect(() => {\n    const init = async () => {\n      var _location$state;\n\n      socketRef.current = await initSocket();\n      socketRef.current.on('connect_error', err => handleErrors(err));\n      socketRef.current.on('connect_failed', err => handleErrors(err));\n\n      function handleErrors(e) {\n        console.log('socket error', e);\n        toast.error('Socket connection failed, try again later.');\n        reactNavigator('/');\n      }\n\n      socketRef.current.emit(ACTIONS.JOIN, {\n        roomId,\n        username: (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username\n      }); // Listening for joined event\n\n      socketRef.current.on(ACTIONS.JOINED, _ref => {\n        var _location$state2;\n\n        let {\n          clients,\n          username,\n          socketId\n        } = _ref;\n\n        if (username !== ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.username)) {\n          toast.success(`${username} joined the room.`);\n          console.log(`${username} joined`);\n        }\n\n        setClients(clients);\n        socketRef.current.emit(ACTIONS.SYNC_CODE, {\n          code: codeRef.current,\n          socketId\n        });\n      }); // Listening for disconnected\n\n      socketRef.current.on(ACTIONS.DISCONNECTED, _ref2 => {\n        let {\n          socketId,\n          username\n        } = _ref2;\n        toast.success(`${username} left the room.`);\n        setClients(prev => {\n          return prev.filter(client => client.socketId !== socketId);\n        });\n      });\n    };\n\n    init();\n    return () => {\n      socketRef.current.disconnect();\n      socketRef.current.off(ACTIONS.JOINED);\n      socketRef.current.off(ACTIONS.DISCONNECTED);\n    };\n  }, []);\n\n  async function copyRoomId() {\n    try {\n      await navigator.clipboard.writeText(roomId);\n      toast.success('Room ID has been copied to your clipboard');\n    } catch (err) {\n      toast.error('Could not copy the Room ID');\n      console.error(err);\n    }\n  }\n\n  function leaveRoom() {\n    reactNavigator('/');\n  }\n\n  if (!location.state) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 16\n    }, this);\n  }\n\n  const handleClick = theme => {\n    setColorTheme(theme);\n    localStorage.setItem('theme-color', theme);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aside\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"asideInner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"logoImage\",\n            src: \"/app_logo.png\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-theme active\",\n            id: \"th1\",\n            onClick: () => handleClick('dracula')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-theme active\",\n            id: \"th2\",\n            onClick: () => handleClick('paraiso-dark')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-theme active\",\n            id: \"th3\",\n            onClick: () => handleClick('material-palenight')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-theme active\",\n            id: \"th4\",\n            onClick: () => handleClick('monokai')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-theme active\",\n            id: \"th5\",\n            onClick: () => handleClick('duotone-light')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clientsList\",\n          children: clients.map(client => /*#__PURE__*/_jsxDEV(Client, {\n            username: client.username\n          }, client.socketId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn copyBtn\",\n        onClick: copyRoomId,\n        children: \"Copy ROOM ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn leaveBtn\",\n        onClick: leaveRoom,\n        children: \"Leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editorWrap\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        socketRef: socketRef,\n        roomId: roomId,\n        onCodeChange: code => {\n          codeRef.current = code;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditorPage, \"O5aMOdwt2wCnuqVQk7SgEgKtMHE=\", false, function () {\n  return [useLocation, useParams, useNavigate];\n});\n\n_c = EditorPage;\nexport default EditorPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","toast","ACTIONS","Client","Editor","initSocket","useLocation","useNavigate","Navigate","useParams","EditorPage","socketRef","codeRef","location","roomId","reactNavigator","clients","setClients","init","current","on","err","handleErrors","e","console","log","error","emit","JOIN","username","state","JOINED","socketId","success","SYNC_CODE","code","DISCONNECTED","prev","filter","client","disconnect","off","copyRoomId","navigator","clipboard","writeText","leaveRoom","handleClick","theme","setColorTheme","localStorage","setItem","map"],"sources":["E:/share-edit/src/pages/EditorPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport ACTIONS from '../Actions';\nimport Client from '../components/Client';\nimport Editor from '../components/Editor';\nimport { initSocket } from '../socket';\nimport {\n    useLocation,\n    useNavigate,\n    Navigate,\n    useParams,\n} from 'react-router-dom';\n\nconst EditorPage = () => {\n    const socketRef = useRef(null);\n    const codeRef = useRef(null);\n    const location = useLocation();\n    const { roomId } = useParams();\n    const reactNavigator = useNavigate();\n    const [clients, setClients] = useState([]);\n\n    useEffect(() => {\n        const init = async () => {\n            socketRef.current = await initSocket();\n            socketRef.current.on('connect_error', (err) => handleErrors(err));\n            socketRef.current.on('connect_failed', (err) => handleErrors(err));\n\n            function handleErrors(e) {\n                console.log('socket error', e);\n                toast.error('Socket connection failed, try again later.');\n                reactNavigator('/');\n            }\n\n            socketRef.current.emit(ACTIONS.JOIN, {\n                roomId,\n                username: location.state?.username,\n            });\n\n            // Listening for joined event\n            socketRef.current.on(\n                ACTIONS.JOINED,\n                ({ clients, username, socketId }) => {\n                    if (username !== location.state?.username) {\n                        toast.success(`${username} joined the room.`);\n                        console.log(`${username} joined`);\n                    }\n                    setClients(clients);\n                    socketRef.current.emit(ACTIONS.SYNC_CODE, {\n                        code: codeRef.current,\n                        socketId,\n                    });\n                }\n            );\n\n            // Listening for disconnected\n            socketRef.current.on(\n                ACTIONS.DISCONNECTED,\n                ({ socketId, username }) => {\n                    toast.success(`${username} left the room.`);\n                    setClients((prev) => {\n                        return prev.filter(\n                            (client) => client.socketId !== socketId\n                        );\n                    });\n                }\n            );\n        };\n        init();\n        return () => {\n            socketRef.current.disconnect();\n            socketRef.current.off(ACTIONS.JOINED);\n            socketRef.current.off(ACTIONS.DISCONNECTED);\n        };\n    }, []);\n\n    async function copyRoomId() {\n        try {\n            await navigator.clipboard.writeText(roomId);\n            toast.success('Room ID has been copied to your clipboard');\n        } catch (err) {\n            toast.error('Could not copy the Room ID');\n            console.error(err);\n        }\n    }\n\n    function leaveRoom() {\n        reactNavigator('/');\n    }\n\n    if (!location.state) {\n        return <Navigate to=\"/\" />;\n    }\n\n    const handleClick = (theme) => {\n        setColorTheme(theme);\n        localStorage.setItem('theme-color',theme);\n     }\n\n    return (\n        <div className=\"mainWrap\">\n            <div className=\"aside\">\n                <div className=\"asideInner\">\n                    <div className=\"logo\">\n                        <img\n                            className=\"logoImage\"\n                            src=\"/app_logo.png\"\n                            alt=\"logo\"\n                        />\n                    </div>\n                    <div className=\"theme-section\">\n                            <div className=\"single-theme active\" id='th1' \n                            onClick={() => handleClick('dracula')}\n                            ></div>\n                            <div className=\"single-theme active\" id=\"th2\" \n                            onClick={() => handleClick('paraiso-dark')}\n                            ></div>\n                            <div className=\"single-theme active\" id=\"th3\"\n                            onClick={() => handleClick('material-palenight')}\n                            ></div>\n                            <div className=\"single-theme active\" id=\"th4\"\n                            onClick={() => handleClick('monokai')}\n                            ></div>\n                            <div className=\"single-theme active\" id=\"th5\"\n                            onClick={() => handleClick('duotone-light')}\n                            ></div>\n                        </div>\n                    <h3>Connected</h3>\n                    <div className=\"clientsList\">\n                        {clients.map((client) => (\n                            <Client\n                                key={client.socketId}\n                                username={client.username}\n                            />\n                        ))}\n                    </div>\n                </div>\n                <button className=\"btn copyBtn\" onClick={copyRoomId}>\n                    Copy ROOM ID\n                </button>\n                <button className=\"btn leaveBtn\" onClick={leaveRoom}>\n                    Leave\n                </button>\n            </div>\n            <div className=\"editorWrap\">\n                <Editor\n                    socketRef={socketRef}\n                    roomId={roomId}\n                    onCodeChange={(code) => {\n                        codeRef.current = code;\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EditorPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}